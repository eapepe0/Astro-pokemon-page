---

interface Props {
    name : string;
    url :  string;
    isBig? : boolean;  // si el componente sera grande pasamos un booleano
}

const {name , url , isBig = false} = Astro.props

const id : string | undefined = url.split('/').at(-2);

const imageSrc : string | undefined = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${id}.png`

// usando el class:list podemos condicionalmente aplicar un estilo
 // 
// <img class:list{[
// "valor por defecto de css",
// { 'valor aplicado depende del valor' : valor booleano
//    'valor aplicado depende del valor2' : valor booleano negativo 
// }
// ]}



---

<div class="max-w-xs mx-auto bg-white shadow-lg rounded-lg overflow-hidden transform hover:scale-105 hover:shadow-xl transition duration-300">
   
    <a href=`/pokemons/${name}`>
        <img class:list={[
            "w-full object-cover ",
            { 'h-72 hover:h-78' : isBig,
              'h-48 hover:h-50' : !isBig,
            }
            ]}  src={imageSrc} alt={name}>
        <div class="p-4">
            <h1 class:list={[
                "font-bold text-gray-800 text-center relative overflow-hidden",
                {   
                    "text-4xl": isBig,
                    "text-xl" : !isBig,
                }
            ]}>
                #{id}
                <span class:list={[
                    "inline-block whitespace-nowrap capitalize",
                    {
                        'text-4xl' : isBig,
                        'text-lg' : !isBig
                    }
                ]}>
                    {name}
                </span>
            </h1>
        </div>
    </a>
</div>

