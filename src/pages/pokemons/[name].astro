---
import type { PokemonListResponse } from "../../interfaces/pokemon-list.response";
import type { GetStaticPaths } from "astro";


import MainLayout from "../../layouts/MainLayout.astro"
import PokemonCard from "../../components/PokemonCard.astro";



export const getStaticPaths = (async () => {

    const respuesta = await fetch('https://pokeapi.co/api/v2/pokemon?limit=151');  // obtenemos los 151 pokemones
    const {results} = await respuesta.json() as PokemonListResponse;  // extraemos los result y los tratamos como PokemonListResponse
    

    
    return results.map(({name , url}) => ({
        params : {name : name},
        props : {name : name , url : url}
    }))

     // construimos esto
    // [
    // { params:{ name: "bulbasaur" },props : {name :"bulbasaur" , url : "https://pokeapi.co/api/v2/pokemon/1/"} },
    // { params:{ name: "ivysaur" } ,props : {name :"ivysaur" , url : "https://pokeapi.co/api/v2/pokemon/2/"}},
    // ]
    
    
}) satisfies GetStaticPaths;

const {name} = Astro.params
const {url} = Astro.props  // extraigo el url de getStaticPaths
const id = url.split('/').slice(-2)[0];  // sacas el id del la url
const audioSrc = `https://raw.githubusercontent.com/PokeAPI/cries/main/cries/pokemon/latest/${id}.ogg`
---
<MainLayout title=`Pokemon : ${name.charAt(0).toUpperCase() + name.slice(1)}`>
    <section class="mt-10 mx-10 flex flex-col justify-center items-center">
        <div>
            <a href="/">Regresar</a>
            <h1 class="text-5xl capitalize">{name}</h1>
        </div>
        <div class="my-5">
            <PokemonCard name={name} url={url} isBig={true}/>
            <audio controls class="mt-5 w-full hover:scale-105  transition duration-300">
                <source src={audioSrc} type="audio/ogg">
                Your browser does not support the audio element.
            </audio>
        </div>
    </section>
</MainLayout>


<style>
    a{
        @apply hover:underline text-blue-500
    }
</style>